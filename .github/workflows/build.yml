name: Java CI with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean install
        working-directory: Java-Login-App

      - name: SonarCloud Scan
        run: mvn verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: Java-Login-App
        
      - name: Set up settings.xml for Maven deploy
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>jfrog</id>
                <username>${{ secrets.JFROG_USERNAME }}</username>
                <password>${{ secrets.JFROG_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Deploy to JFrog Artifactory
        run: mvn deploy -DskipTests -Djfrog.url=${{ secrets.JFROG_URL }}
        working-directory: Java-Login-App
